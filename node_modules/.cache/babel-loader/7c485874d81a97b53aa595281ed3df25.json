{"ast":null,"code":"var _jsxFileName = \"/Users/aneta/github.io/smartbrain/src/App.js\";\nimport React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\nimport Clarifai, { LOGO_MODEL } from 'clarifai';\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nconst app = new Clarifai.App({\n  apiKey: \"54a850dc83c84628a9b74c73d1151366\"\n});\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 90,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.output[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_col * height\n      };\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.calculateFaceLocation(response)).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"Particles\",\n      params: particleOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aneta/github.io/smartbrain/src/App.js"],"names":["React","Component","Particles","Clarifai","LOGO_MODEL","Navigation","FaceRecognition","Logo","ImageLinkForm","Rank","app","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","constructor","displayFaceBox","box","setState","calculateFaceLocation","data","clarifaiFace","output","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_col","onInputChange","event","input","target","onButtonSubmit","imageURL","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","imageUrl","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\nimport Clarifai, { LOGO_MODEL } from 'clarifai';\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\n\nconst app = new Clarifai.App({\n   apiKey: \"54a850dc83c84628a9b74c73d1151366\",\n});\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 90,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',   \n      imageUrl: '',\n      box: {}, \n    }\n  }\n\n  displayFaceBox = (box) =>{ \n   this.setState ({box: box})\n  }\n\ncalculateFaceLocation = (data) => { \n const clarifaiFace = data.output[0].data.regions[0].region_info.bounding_box;\n const image = document.getElementById ('inputimage');\n const width = Number(image.width);\n const height = Number(image.height);\n return {   \n  leftCol: clarifaiFace.left_col * width,\n  topRow: clarifaiFace.top_row * height,\n  rightCol: width - (clarifaiFace.right_col * width),\n\n  bottomRow: height - (clarifaiFace.bottom_col * height)\n}\n}\n\n  onInputChange = (event) => {\n this.setState({input: event.target.value});\n  };\n  onButtonSubmit = () => { \n    this.setState({imageURL: this.state.input}) \n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL, this.state.input \n      )\n.then(response => this.calculateFaceLocation (response)) \n\n.catch(err => console.log(err));}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"Particles\" params={particleOptions} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm\n          onInputChange={this.onInputChange}\n          onButtonSubmit={this.onButtonSubmit}\n        />\n        <FaceRecognition imageUrl = {this.state.imageUrl}/> \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}