{"version":3,"sources":["components/Navigation/Navigation.js","components/SignIn/SignIn.js","components/FaceRecognition/FaceRecognition.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","SignIn","id","htmlFor","type","name","value","FaceRecognition","imageUrl","box","alt","src","width","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Logo","options","max","height","paddingTop","brain","ImageLinkForm","onInputChange","onButtonSubmit","onChange","Rank","Register","app","Clarifai","App","apiKey","particleOptions","particles","number","density","enable","value_area","displayFaceBox","setState","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.9a55f178.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({onRouteChange, isSignedIn})=> { \n  \n        if (isSignedIn){ \n            return ( \n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n            <p onClick={()=>onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p> \n        </nav>);\n    } else { \n        return (\n    <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n    <p onClick={()=>onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p> \n    <p onClick={()=>onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n\n    </nav>\n        );\n    }\n    \n}\nexport default Navigation;","import React from \"react\";\n\nconst SignIn = ({onRouteChange}) => {\n  return (\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n      <main className=\"pa4 black-80\">\n        <div className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                Email\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n              />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input\n              onClick={()=>onRouteChange('home')}\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n              type=\"submit\"\n              value=\"Sign in\"\n            />\n          </div>\n          <div className=\"lh-copy mt3\">\n            <p onClick={()=>onRouteChange('register')} className=\"f6 link dim black db pointer\">  \n              Register\n            </p>\n          </div>\n        </div>\n      </main>\n    </article>\n  );\n};\n\nexport default SignIn;\n","import React from \"react\";\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({imageUrl, box}) => { \n  return (\n    <div className='center ma'> \n    <div className='absolute mt2'>\n    <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/> \n    <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n    </div>\n      \n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport \"./Logo.css\";\nimport brain from \"./brain.png\";\n\nconst Logo = () => {\n  return (\n    <div className=\"ma4 mt0\">\n      <Tilt\n        className=\"Tilt br2 shadow-2\"\n        options={{ max: 55 }}\n        style={{ height: 150, width: 150 }}\n      >\n        <div className=\"Tilt-inner pa3\">\n          <img style={{ paddingTop: \"1px\" }} alt=\"logo\" src={brain}></img>{\" \"}\n        </div>\n      </Tilt>\n    </div>\n  );\n};\nexport default Logo;\n","import React from \"react\";\nimport './ImageLinkForm.css'\n\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\n  return (\n    <div>\n      <p className=\"f5 ttu\">\n        {\n          \"This Magic iBrain will detect faces  in your picture. Git it a shoot!\"\n        }\n      </p>\n      <div className=\"center\">\n        <div className=\"form center pa4 br3 shadow-5\">\n          <input className=\"f4 pa2 w-70 center\" type ='text' onChange = {onInputChange}/>\n          <button className=\"w-30 grow f4 b link ph pv2 dib white bg-red\"\n          onClick = {onButtonSubmit}>Detect\n           </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinkForm;\n","import React from \"react\";\n\nconst Rank = () => {\n  return (\n    <div>\n      {\" \"}\n      <div className=\"white f3\">{\"Aneta, your current rank is...\"}</div>\n      <div className=\"white b f1\">{\"#5\"}</div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React from \"react\";\n\nconst Register = ({onRouteChange}) => {\n  return (\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n      <main className=\"pa4 black-80\">\n        <div className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                Name\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                \n              />\n            </div>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                Email\n              </label>\n              <input\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"email\"\n                name=\"email-address\"\n                id=\"email-address\"\n              />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                Password\n              </label>\n              <input\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n              />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input\n              onClick={()=>onRouteChange('home')}\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n              type=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </div>\n      </main>\n    </article>\n  );\n};\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport SignIn from \"./components/SignIn/SignIn\";\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\nimport Logo from \"./components/Logo/Logo\";\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./components/Rank/Rank\";\nimport Register from \"./components/Register/Register\";\n\n\nconst app = new Clarifai.App({\n  apiKey: \"54a850dc83c84628a9b74c73d1151366\",\n});\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 90,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {},\n      route: \"signin\",\n      isSignedIn: false\n    };\n  }\n\n  displayFaceBox = (box) => {\n    //console.log(box);\n    this.setState({ box: box });\n  };\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      /* .predict({id:'a403429f2ddf4b49b307e318f00e528b', version:'34ce21a40cc24b6b96ffee54aabff139'}, this.state.input) */\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) =>\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      )\n      .catch((err) => console.log(err));\n  };\n  onRouteChange = (route)=> { \n    if (route === 'signout'){ \n      this.setState({isSignedIn: false}) \n    } else if (route === 'home'){ \n      this.setState({isSignedIn: true}) \n    } \n      this.setState({route: route}); \n    \n  }\n\n\n  render() {\n    const {isSignedIn, box, imageUrl, route} =this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"Particles\" params={particleOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        {route === \"home\" \n        ?  <div> \n            <Logo />\n            <Rank />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognition\n              box={box}\n              imageUrl={imageUrl}\n            />\n          </div>\n          : ( \n         route === \"signin\" \n          ? <SignIn onRouteChange={this.onRouteChange} /> \n          : <Register onRouteChange={this.onRouteChange} />\n          )\n         //// <SignIn onRouteChange={this.onRouteChange} /> : 20. RENDER THE HOMESCREEN (MOVE THIS LINE OF CODE BOTTOM) \n      \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n\n    <App />\n ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.76f28f4f.png\";"],"sourceRoot":""}